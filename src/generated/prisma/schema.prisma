// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Player {
  id                  String        @id @default(uuid())
  name                String
  isActive            Boolean       @default(true)
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
  teamMemberships     TeamMember[]
  matchParticipations MatchPlayer[]
}

model Team {
  id          String       @id @default(uuid())
  name        String
  description String?
  isManaged   Boolean      @default(true) // true: 自分たちの管轄範囲内, false: 競合チーム
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  members     TeamMember[]
}

model TeamMember {
  id       String   @id @default(uuid())
  playerId String
  teamId   String
  joinedAt DateTime @default(now())
  player   Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
  team     Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)

  @@unique([playerId, teamId])
}

model Match {
  id        String        @id @default(uuid())
  date      DateTime
  location  String
  homeScore Int? // ホームチームのスコア
  awayScore Int? // アウェイチームのスコア
  notes     String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  players   MatchPlayer[]
}

model MatchPlayer {
  id       String  @id @default(uuid())
  matchId  String
  playerId String
  isHome   Boolean // true: ホームチーム, false: アウェイチーム
  position String?
  match    Match   @relation(fields: [matchId], references: [id], onDelete: Cascade)
  player   Player  @relation(fields: [playerId], references: [id], onDelete: Cascade)

  @@unique([matchId, playerId])
}
